apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  annotations:
    argocd-autopilot.argoproj-labs.io/default-dest-server: https://aksvarisco-rg-vrdv-eus-vari-00e74b-b8bbd5d1.privatelink.eastus.azmk8s.io
    argocd.argoproj.io/sync-options: PruneLast=true
    argocd.argoproj.io/sync-wave: "-2"
  creationTimestamp: null
  name: varis-core-aks-dev
  namespace: argocd
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  description: varis-core-aks-dev project
  destinations:
  - namespace: varis-core
    server: https://aksvarisco-rg-vrdv-eus-vari-00e74b-b8bbd5d1.privatelink.eastus.azmk8s.io
    name: varis-core-aks-dev
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  sourceRepos:
  - '*'
status: {}

---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  creationTimestamp: null
  name: varis-core-aks-dev
  namespace: argocd
spec:
  generators:
  - git:
      files:
      - path: apps/**/varis-core-aks-dev/config-dg03.json
      repoURL: https://github.com/officedepot/varis-argo-cd.git
      requeueAfterSeconds: 20
      revision: ""
      template:
        metadata: {}
        spec:
          destination: {}
          project: ""
          source:
            repoURL: ""
  - git:
      files:
      - path: apps/**/varis-core-aks-dev/config_dir.json
      repoURL: https://github.com/officedepot/varis-argo-cd.git
      requeueAfterSeconds: 20
      revision: ""
      template:
        metadata: {}
        spec:
          destination: {}
          project: ""
          source:
            directory:
              exclude: '{{ exclude }}'
              include: '{{ include }}'
              jsonnet: {}
              recurse: true
            repoURL: ""
  syncPolicy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: argocd-autopilot
        app.kubernetes.io/name: '{{ appName }}'
      annotations:
        argocd-image-updater.argoproj.io/image-list: variscore=varisacr.azurecr.io/bq-bc/bq-bci-application:dev.latest
        argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/git-creds
        argocd-image-updater.argoproj.io/write-back-target: kustomization
        argocd-image-updater.argoproj.io/variscore.update-strategy: digest
        argocd-image-updater.argoproj.io/variscore.allow-tags: 'regexp:dev\.[0-9a-z_]+$'
        argocd-image-updater.argoproj.io/variscore.pull-secret: 'pullsecret:argocd/varisacr-registry'
        argocd-image-updater.argoproj.io/git-branch: main
        argocd-image-updater.argoproj.io/argocd.kustomize.image-name: varisacr.azurecr.io/bq-bc/bq-bci-application
        # notifications.argoproj.io/subscribe.on-sync-succeeded.teams: channelName
        # notifications.argoproj.io/subscribe.on-sync-failed.teams: channelName        
      name: varis-core-aks-dev-{{ userGivenName }}
      namespace: argocd
    spec:
      destination:
        namespace: '{{ destNamespace }}'
        server: '{{ destServer }}'
      ignoreDifferences:
      - group: argoproj.io
        jsonPointers:
        - /status
        kind: Application
      project: varis-core-aks-dev
      source:
        path: '{{ srcPath }}'
        repoURL: '{{ srcRepoURL }}'
        targetRevision: '{{ srcTargetRevision }}'
      syncPolicy:
        automated:
          allowEmpty: true
          prune: false
          selfHeal: true
status: {}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  creationTimestamp: null
  name: varis-core-aks-dev-php82
  namespace: argocd
spec:
  generators:
  - git:
      files:
      - path: apps/**/varis-core-aks-dev/config-dg04.json      
      repoURL: https://github.com/officedepot/varis-argo-cd.git
      requeueAfterSeconds: 20
      revision: ""
      template:
        metadata: {}
        spec:
          destination: {}
          project: ""
          source:
            repoURL: ""
  - git:
      files:
      - path: apps/**/varis-core-aks-dev/config_dir.json
      repoURL: https://github.com/officedepot/varis-argo-cd.git
      requeueAfterSeconds: 20
      revision: ""
      template:
        metadata: {}
        spec:
          destination: {}
          project: ""
          source:
            directory:
              exclude: '{{ exclude }}'
              include: '{{ include }}'
              jsonnet: {}
              recurse: true
            repoURL: ""
  syncPolicy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: argocd-autopilot
        app.kubernetes.io/name: '{{ appName }}'
#      annotations:
#         argocd-image-updater.argoproj.io/image-list: variscore=varisacr.azurecr.io/bq-bc/bq-bci-application:dev.latest
#         argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/git-creds
#         argocd-image-updater.argoproj.io/write-back-target: kustomization
#         argocd-image-updater.argoproj.io/variscore.update-strategy: digest
#         argocd-image-updater.argoproj.io/variscore.allow-tags: 'regexp:^dev\.[0-9a-z_]+$'
#         argocd-image-updater.argoproj.io/variscore.pull-secret: 'pullsecret:argocd/varisacr-registry'
#         argocd-image-updater.argoproj.io/git-branch: main
#         argocd-image-updater.argoproj.io/argocd.kustomize.image-name: odakscore.azurecr.io/bq-bc/bq-bci-application
      name: varis-core-aks-dev-{{ userGivenName }}
      namespace: argocd
    spec:
      destination:
        namespace: '{{ destNamespace }}'
        server: '{{ destServer }}'
      ignoreDifferences:
      - group: argoproj.io
        jsonPointers:
        - /status
        kind: Application
      project: varis-core-aks-dev
      source:
        path: '{{ srcPath }}'
        repoURL: '{{ srcRepoURL }}'
        targetRevision: '{{ srcTargetRevision }}'
      syncPolicy:
        automated:
          allowEmpty: true
          prune: false
          selfHeal: true
status: {}
